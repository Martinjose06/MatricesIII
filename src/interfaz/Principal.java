/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import clases.Helper;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LUCYLEONOR
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        JButton botonesH[] = {cmdCrear, cmdLimpiar};
        JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdOperaciones};
        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNumeroFila = new javax.swing.JTextField();
        txtNumeroColumnas = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMatriz = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        cmdLlenadoManual = new javax.swing.JButton();
        cmdLlenadoAutomatico = new javax.swing.JButton();
        cmdOperaciones = new javax.swing.JButton();
        cmdLimpiar = new javax.swing.JButton();
        cmdCrear = new javax.swing.JButton();
        cmbOperaciones = new javax.swing.JComboBox<String>();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Operaciones Con Matriz");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", 2, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Núm. Filas");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel4.setText("Núm. Columnas");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, -1));

        txtNumeroFila.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroFilaKeyTyped(evt);
            }
        });
        jPanel3.add(txtNumeroFila, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 50, -1));

        txtNumeroColumnas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroColumnasKeyTyped(evt);
            }
        });
        jPanel3.add(txtNumeroColumnas, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 50, -1));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 380, 90));

        tblMatriz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMatriz.setEnabled(false);
        jScrollPane1.setViewportView(tblMatriz);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 380, 280));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", 2, 0));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmdLlenadoManual.setText("Llenado Manual");
        cmdLlenadoManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLlenadoManualActionPerformed(evt);
            }
        });
        jPanel4.add(cmdLlenadoManual, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 130, -1));

        cmdLlenadoAutomatico.setText("Llenado Automatico");
        cmdLlenadoAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLlenadoAutomaticoActionPerformed(evt);
            }
        });
        jPanel4.add(cmdLlenadoAutomatico, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 130, -1));

        cmdOperaciones.setText("Efectuar");
        cmdOperaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOperacionesActionPerformed(evt);
            }
        });
        jPanel4.add(cmdOperaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 130, -1));

        cmdLimpiar.setText("Limpiar");
        cmdLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLimpiarActionPerformed(evt);
            }
        });
        jPanel4.add(cmdLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 130, -1));

        cmdCrear.setText("Crear");
        cmdCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCrearActionPerformed(evt);
            }
        });
        jPanel4.add(cmdCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 130, -1));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, 170, 280));

        cmbOperaciones.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Recorrido 1", "Recorrido 2", "Recorrido 3", "Recorrido 4", "Recorrido 5" }));
        jPanel2.add(cmbOperaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 470, 220, -1));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultado", 2, 0));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtResultado.setEditable(false);
        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        jScrollPane2.setViewportView(txtResultado);

        jPanel5.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 17, 350, -1));

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 510, 380, 130));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdLlenadoAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLlenadoAutomaticoActionPerformed

        int nf, nc;
        int n;
        nf = tblMatriz.getRowCount();
        nc = tblMatriz.getColumnCount();

        for (int i = 0; i < nf; i++) {
            for (int j = 0; j < nc; j++) {
                n = (int) (Math.random() * 25 + 1);
                tblMatriz.setValueAt(n, i, j);
            }

        }
        JButton botonesH[] = {cmdOperaciones, cmdLimpiar};
        JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdCrear};
        Helper.deshabilitarBotones(botonesD);
        Helper.habilitarBotones(botonesH);
    }//GEN-LAST:event_cmdLlenadoAutomaticoActionPerformed

    private void cmdOperacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOperacionesActionPerformed

        int nc, nf, op;

        op = cmbOperaciones.getSelectedIndex();
        nc = tblMatriz.getColumnCount();
        nf = tblMatriz.getRowCount();
        txtResultado.setText("");

        switch (op) {
            case 0:
                if (nc != nf) {
                    Helper.mensaje(this, "El numero de columnas debe ser igual al numero de filas", "Error", 2);
                } else if (nc % 2 == 0 || nf % 2 == 0) {
                    Helper.mensaje(this, "El numero de columnas y el numero de filas deben ser impar", "Error", 2);
                } else {
                    txtResultado.setText(Helper.recorridoUno(tblMatriz));
                }

                break;

            case 1:
                if (nc != nf) {
                    Helper.mensaje(this, "El numero de columnas debe ser igual al numero de filas", "Error", 2);
                } else if (nc % 2 == 0 || nf % 2 == 0) {
                    Helper.mensaje(this, "El numero de columnas y el numero de filas deben ser impar", "Error", 2);
                } else {
                    txtResultado.setText(Helper.recorridoDos(tblMatriz));
                }
                break;
            case 2:
                if (nc % 2 != 0 || nf % 2 != 0) {
                    Helper.mensaje(this, "El numero de filas y columnas debe ser par", "Error", 2);
                } else if (nc != nf) {
                    Helper.mensaje(this, "El numero de filas y columnas deben ser iguales", "Error", 2);
                } else {
                    txtResultado.setText(Helper.recorridoTres(tblMatriz));
                }
                break;
            case 3:
                if (nc != nf) {
                    Helper.mensaje(this, "El numero de columnas debe ser igual al numero de filas", "Error", 2);
                } else if (nc % 2 == 0 || nf % 2 == 0) {
                    Helper.mensaje(this, "El numero de columnas y el numero de filas deben ser impar", "Error", 2);
                } else {
                txtResultado.setText(Helper.recorridoCuatro(tblMatriz));
                }
                break;
            case 4:
                if (nc != nf) {
                    Helper.mensaje(this, "El numero de columnas debe ser igual al numero de filas", "Error", 2);
                } else if (nc % 2 == 0 || nf % 2 == 0) {
                    Helper.mensaje(this, "El numero de columnas y el numero de filas deben ser impar", "Error", 2);
                } else {
                txtResultado.setText(Helper.recorridoCinco(tblMatriz));
                }
                break;
        }


    }//GEN-LAST:event_cmdOperacionesActionPerformed

    private void cmdLlenadoManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLlenadoManualActionPerformed

        double n;
        int aux, nc, nf, res;
        boolean sw = true;
        nf = tblMatriz.getRowCount();
        nc = tblMatriz.getColumnCount();
        for (int i = 0; i < nf; i++) {
            for (int j = 0; j < nc; j++) {

                do {
                    aux = 1;
                    try {
                        n = Double.parseDouble(Helper.recibirDatos(this, "Digite el elemento en la posición: " + " (" + i + "," + j + ")"));
                        tblMatriz.setValueAt((int) n, i, j);
                    } catch (NumberFormatException e) {
                        Helper.mensaje(this, "Digite la información correctamente", "Error", 2);
                        aux = 0;
                    } catch (NullPointerException e) {
                        res = Helper.mensaje(this, "¿Desea Salir?", "Salir", 3);
                        if (res == 0) {
                            aux = 1;
                            j = nc;
                            i = nf;
                            sw = false;
                            JButton botonesH[] = {cmdCrear, cmdLimpiar};
                            JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdOperaciones};
                            Helper.deshabilitarBotones(botonesD);
                            Helper.habilitarBotones(botonesH);
                            Helper.tablaPorDefecto(tblMatriz);
                            Helper.limpiarTabla(tblMatriz);
                        } else {
                            aux = 0;
                            JButton botonesH[] = {cmdOperaciones, cmdLimpiar};
                            JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdCrear};
                            Helper.deshabilitarBotones(botonesD);
                            Helper.habilitarBotones(botonesH);
                        }

                    }
                } while (aux == 0);
            }
        }
        JButton botonesH[] = {cmdLimpiar};
        JButton botonesD[] = {cmdOperaciones, cmdLlenadoAutomatico, cmdLlenadoManual, cmdCrear};
        Helper.deshabilitarBotones(botonesD);
        Helper.habilitarBotones(botonesH);
    }//GEN-LAST:event_cmdLlenadoManualActionPerformed

    private void cmdLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLimpiarActionPerformed
        txtNumeroFila.setText("");
        txtNumeroColumnas.setText("");
        txtResultado.setText("");
        cmbOperaciones.setSelectedIndex(0);
        Helper.limpiarTabla(tblMatriz);
        JButton botonesH[] = {cmdCrear, cmdLimpiar};
        JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdOperaciones};
        txtNumeroColumnas.setEditable(true);
        txtNumeroFila.setEditable(true);
        txtNumeroFila.requestFocusInWindow();
        Helper.deshabilitarBotones(botonesD);
        Helper.habilitarBotones(botonesH);
    }//GEN-LAST:event_cmdLimpiarActionPerformed

    private void txtNumeroFilaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroFilaKeyTyped
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            getToolkit().beep();
            evt.consume();
        }
     }//GEN-LAST:event_txtNumeroFilaKeyTyped

    private void txtNumeroColumnasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroColumnasKeyTyped
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            getToolkit().beep();
            evt.consume();
        }
     }//GEN-LAST:event_txtNumeroColumnasKeyTyped

    private void cmdCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCrearActionPerformed

        if (txtNumeroColumnas.getText().trim().isEmpty() && txtNumeroFila.getText().trim().isEmpty()) {
            Helper.mensaje(this, "Ingrese por favor los datos", "Error", 2);
            txtNumeroFila.requestFocusInWindow();
        } else if (txtNumeroColumnas.getText().trim().isEmpty()) {
            Helper.mensaje(this, "Ingrese por el numero de columnas", "Error", 2);
            txtNumeroColumnas.requestFocusInWindow();
        } else if (txtNumeroFila.getText().trim().isEmpty()) {
            Helper.mensaje(this, "Ingrese por el numero de filas", "Error", 2);
            txtNumeroFila.requestFocusInWindow();
            txtNumeroFila.selectAll();
        } else if (Integer.parseInt(txtNumeroColumnas.getText()) < 5) {
            Helper.mensaje(this, "El numero de columnas debe ser mayor que 5", "Error", 2);
            txtNumeroColumnas.requestFocusInWindow();
            txtNumeroColumnas.selectAll();
        } else if (Integer.parseInt(txtNumeroFila.getText()) < 5) {
            Helper.mensaje(this, "El numero de filas debe ser mayor que 5", "Error", 2);
            txtNumeroFila.requestFocusInWindow();
            txtNumeroFila.selectAll();
        } else if (Integer.parseInt(txtNumeroColumnas.getText()) > 15) {
            Helper.mensaje(this, "El numero de columnas no debe ser mayor que 15", "Error", 2);
            txtNumeroColumnas.requestFocusInWindow();
            txtNumeroColumnas.selectAll();
        } else if (Integer.parseInt(txtNumeroFila.getText()) > 15) {
            Helper.mensaje(this, "El numero de filas no debe ser mayor que 15", "Error", 2);
            txtNumeroFila.requestFocusInWindow();
            txtNumeroFila.selectAll();
        } else {
            DefaultTableModel tm;
            tm = (DefaultTableModel) tblMatriz.getModel();

            int nc = Integer.parseInt(txtNumeroColumnas.getText());
            int nf = Integer.parseInt(txtNumeroFila.getText());

            tm.setColumnCount(nc);
            tm.setRowCount(nf);
            JButton botonesH[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdLimpiar};
            JButton botonesD[] = {cmdOperaciones, cmdCrear};
            txtNumeroColumnas.setEditable(false);
            txtNumeroFila.setEditable(false);
            Helper.deshabilitarBotones(botonesD);
            Helper.habilitarBotones(botonesH);
        }


    }//GEN-LAST:event_cmdCrearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbOperaciones;
    private javax.swing.JButton cmdCrear;
    private javax.swing.JButton cmdLimpiar;
    private javax.swing.JButton cmdLlenadoAutomatico;
    private javax.swing.JButton cmdLlenadoManual;
    private javax.swing.JButton cmdOperaciones;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblMatriz;
    private javax.swing.JTextField txtNumeroColumnas;
    private javax.swing.JTextField txtNumeroFila;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables
}
